import java.util.Scanner;
interface P
{
    String p = "";
    String methodP();
}
interface Q extends P
{
    String q = "";
    String methodQ();
}
class   R implements Q,P
{
    public String methodP()
    {
     Scanner scan = new Scanner(System.in);
     double fah, cel ;
     System.out.println("input number");
     cel=scan.nextDouble();
     fah=(1.8*cel)+32;
System.out.println(fah+"°F");
return p+q;
    }
      public String methodQ()
      {   
      
 Scanner scan = new Scanner(System.in);
     double cel , fah;
     System.out.println("input number");
     fah=scan.nextDouble();
     cel=(fah*1.8)+32;
    System.out.println(cel+"°C");
    return p+q;
      }
}
public class IPPPPT {
    public static void main (String args[])
    {
        R r = new R();
        System.out.println(r.methodP()+r.methodQ());
        System.out.println(r.methodQ()+r.methodP());
    }

    }

public class MyMethod {

   public static void main(String[] args) {
      int a = 11;
      int b = 6;
      double c = 7.3;
      double d = 9.4;
      int result1 = minFunction(a, b);
      
     
      double result2 = minFunction(c, d);
      System.out.println("Minimum Value = " + result1);
      System.out.println("Minimum Value = " + result2);
   }

  
   public static int minFunction(int m1, int m2) {
      int min;
      if (m1 > m2)
         min = m2;
      else
         min = m1;

      return min; 
   }
   
   
   public static double minFunction(double m1, double m2) {
     double min;
      if (m1 > m2)
         min = m2;
      else
         min = m1;

      return min; 
   }
}




class Main {

  public void display1() {
    System.out.println("Method without parameter");
  }

  public void display2(int a) {
    System.out.println("Method with a single parameter: " + a);
  }

  public static void main(String[] args) {
    
    Main obj = new Main();
    obj.display1();
    obj.display2(24);
  }
}